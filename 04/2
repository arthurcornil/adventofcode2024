import fs from 'fs/promises';

type wordBoundaries = {
    start: number[],
    end: number[]
}

let rawData: string | undefined;
const fileName = "./test-input";

const boundaries: wordBoundaries[] = [];
const needle = "XMAS";

function findNeedleInPath(x: number, y: number, path: number) {
    const yIncrementor = path / rawLines
}

function findBoundaries(x: number, y: number): wordBoundaries | null {
    let currentWordFound: string = rawLines[y].charAt(x);
    for (let i = 0; i < 8; i ++) {
        if (y > 3 && i >= 0 && i <= 2) {
            findNeedleInPath(x, y, i);
        }
    }
}

try {
    rawData = await fs.readFile(fileName, 'utf8');
} catch (_err) {
    throw Error("An error occured when openeing the file.");
}

if (!rawData) {
    throw Error("An error occured.");
}

const rawLines: string[] = rawData.split(/\n/);

rawLines.forEach((line, index) => {
    if (!line.length) {
        return ;
    }
    for (let i = 0; i < line.length; i ++) {
        if (line.charAt(i) !== needle.charAt(0) && line.charAt(i) !== needle.charAt(needle.length - 1)) {
            return ;
        }
        const boundary: wordBoundaries | null = findBoundaries(i, index);
    }
});
